AWSTemplateFormatVersion: "2010-09-09"
Description: SDLF CICD roles in child account

Parameters:
  pDevOpsAccountId:
    Description: DevOps AWS account ID
    Type: String
    AllowedPattern: (\d{12}|^$)
    ConstraintDescription: Must be an AWS account ID
  pDevOpsArtifactsBucket:
    Description: DevOps Artifacts bucket
    Type: String
  pDevOpsKMSKey:
    Description: DevOps KMS key alias
    Type: String
  pCustomBucketPrefix:
    Description: S3 Bucket Prefix if different from default. Must be a valid S3 Bucket name
    Type: String
    Default: sdlf
  pEnableVpc:
    Description: Deploy SDLF resources in a VPC
    Type: String
    Default: false
  pEnableMonitoring:
    Description: Build sdlf-monitoring cloudformation module as part of domain pipelines
    Type: String
    Default: false

Conditions:
  MultiAccountSetup: !Not [!Equals [!Ref pDevOpsAccountId, !Ref "AWS::AccountId"]]
  UseCustomBucketPrefix: !Not [!Equals [!Ref pCustomBucketPrefix, sdlf]]
  RunInVpc: !Equals [!Ref pEnableVpc, true]
  EnableMonitoring: !Equals [!Ref pEnableMonitoring, true]

Resources:
  ######## OPTIONAL SDLF FEATURES #########
  rVpcFeatureSsm:
    Type: AWS::SSM::Parameter
    Condition: MultiAccountSetup
    Properties:
      Name: /SDLF/VPC/Enabled
      Type: String
      Value: !Ref pEnableVpc
      Description: Deploy SDLF resources in a VPC

  rDevopsCrossaccountCodePipelineRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: KMS permissions are controlled through kms:ResourceAliases, the team's KMS infra key has not been created yet and its ARN is not known
          - id: W28
            reason: Resource uses an explicit name as it is used as principal in crossaccount S3 policies (devops kms & s3)
    Properties:
      RoleName: sdlf-cicd-devops-crossaccount-pipeline
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Sub arn:${AWS::Partition}:iam::${pDevOpsAccountId}:root
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: sdlf-cicd-codepipeline
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:Get*
                  - s3:ListBucket*
                  - s3:Put*
                Resource:
                  - !Sub arn:${AWS::Partition}:s3:::${pDevOpsArtifactsBucket}
                  - !Sub arn:${AWS::Partition}:s3:::${pDevOpsArtifactsBucket}/*
              - Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:Describe*
                  - kms:Encrypt
                  - kms:GenerateDataKey*
                  - kms:List*
                  - kms:ReEncrypt*
                  - kms:CreateGrant
                Resource: "*"
                Condition:
                  "ForAnyValue:StringLike":
                    "kms:ResourceAliases": !Ref pDevOpsKMSKey
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                Resource: !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/CFN/*
              - Effect: Allow
                Action:
                  - cloudformation:CreateChangeSet
                  - cloudformation:CreateStack
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeChangeSet
                  - cloudformation:DescribeStackEvents
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:SetStackPolicy
                  - cloudformation:UpdateStack
                  - cloudformation:GetTemplateSummary
                Resource:
                  - !Sub "arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/sdlf-cfn-module-*"
                  - !Sub "arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/sdlf-lambdalayers-*"
                  - !Sub arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/sdlf-domain-*
                  - !Sub arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/sdlf-cicd-team-role-*
                  - !Sub arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/sdlf-*-pipelines-*
                  - !Sub arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/sdlf-*-datasets-*
                  - !Sub arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/sdlf-*-lambdalayers-*
                  - !Sub arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/sdlf-*-gluejobs-*
              - Effect: Allow
                Action: iam:PassRole
                Resource:
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sdlf-cicd-cfn-modules
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sdlf-cicd-domain
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sdlf-cicd-team
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sdlf-cicd-team-*
                Condition:
                  StringEquals:
                    "iam:PassedToService": cloudformation.amazonaws.com
              - Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                Resource:
                  - !Sub arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/sdlf-*

  rBuildModuleCloudFormationRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: |-
              KMS permissions are controlled through kms:ResourceAliases, the team's KMS infra key has not been created yet and its ARN is not known
              The other actions with "*" are all ones that only support the all resources wildcard
          - id: W28
            reason: Resource uses an explicit name as it is used as principal in crossaccount S3 policies (devops kms & s3)
    Properties:
      RoleName: sdlf-cicd-cfn-modules
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: sdlf-cfn-mod-codepipeline
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:Get*
                  - s3:ListBucket*
                  - s3:Put*
                Resource:
                  - !Sub arn:${AWS::Partition}:s3:::${pDevOpsArtifactsBucket}
                  - !Sub arn:${AWS::Partition}:s3:::${pDevOpsArtifactsBucket}/*
              - Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:Describe*
                  - kms:Encrypt
                  - kms:GenerateDataKey*
                  - kms:List*
                  - kms:ReEncrypt*
                  - kms:CreateGrant
                Resource: "*"
                Condition:
                  "ForAnyValue:StringLike":
                    "kms:ResourceAliases": !Ref pDevOpsKMSKey
              - Effect: Allow
                Action:
                  - cloudformation:RegisterType
                  - cloudformation:SetTypeDefaultVersion
                  - cloudformation:DescribeType
                  - cloudformation:DeregisterType
                Resource:
                  - !Sub "arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:type/MODULE/awslabs::sdlf::*"
                  - !Sub "arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:type/module/awslabs-sdlf-*"
                  - !Sub "arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:type/MODULE/*"
                  - !Sub "arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:type/module/*"
              - Effect: Allow
                Action:
                  - cloudformation:DescribeTypeRegistration # W11 exception
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                  - ssm:PutParameter
                  - ssm:AddTagsToResource
                  - ssm:ListTagsForResource
                  - ssm:RemoveTagsFromResource
                  - ssm:DeleteParameter
                Resource:
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/CFN/*
        - PolicyName: sdlf-lambdalayers-codepipeline
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:CreateChangeSet
                Resource:
                  - !Sub arn:${AWS::Partition}:cloudformation:${AWS::Region}:aws:transform/LanguageExtensions
              - Effect: Allow
                Action:
                  - lambda:PublishLayerVersion
                  - lambda:DeleteLayerVersion
                Resource:
                  - !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:layer:sdlf-DatalakeLibrary
                  - !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:layer:sdlf-DatalakeLibrary:*
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                  - ssm:PutParameter
                  - ssm:AddTagsToResource
                  - ssm:ListTagsForResource
                  - ssm:RemoveTagsFromResource
                  - ssm:DeleteParameter
                Resource:
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/Lambda/LatestDatalakeLibraryLayer

  rDomainCloudFormationRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: The actions with "*" are all ones that only support the all resources wildcard
          - id: W28
            reason: Resource uses an explicit name as it is used as principal in crossaccount S3 policies (devops kms & s3)
    Properties:
      RoleName: sdlf-cicd-domain
      Description: Role assumed by CodePipeline to deploy the Domain CloudFormation stack
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AWSLakeFormationCrossAccountManager
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:Get*
                  - s3:ListBucket*
                  - s3:Put*
                Resource:
                  - !Sub arn:${AWS::Partition}:s3:::${pDevOpsArtifactsBucket}/*
              - Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:Describe*
                  - kms:Encrypt
                  - kms:GenerateDataKey*
                  - kms:List*
                  - kms:ReEncrypt*
                Resource: "*"
                Condition:
                  "ForAnyValue:StringLike":
                    "kms:ResourceAliases": !Ref pDevOpsKMSKey
        - PolicyName: sdlf-cicd
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:CreateChangeSet
                  - cloudformation:CreateStack
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeChangeSet
                  - cloudformation:DescribeStacks
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:SetStackPolicy
                  - cloudformation:UpdateStack
                  - cloudformation:GetTemplate
                  - cloudformation:GetTemplateSummary
                Resource:
                  - !Sub arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/sdlf-*
              - Effect: Allow
                Action:
                  - cloudformation:ListStacks # W11 exception
                  - cloudformation:ValidateTemplate # W11 exception
                Resource: "*"
              - Effect: Allow
                Action:
                  - dynamodb:CreateTable
                  - dynamodb:DeleteTable
                  - dynamodb:DescribeTable
                  - dynamodb:DescribeTimeToLive
                  - dynamodb:ListTagsOfResource
                  - dynamodb:TagResource
                  - dynamodb:UntagResource
                  - dynamodb:UpdateTable
                  - dynamodb:UpdateTimeToLive
                  - dynamodb:DescribeContinuousBackups
                  - dynamodb:UpdateContinuousBackups
                Resource: !Sub arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/octagon-*
              - Effect: Allow
                Action:
                  - events:DeleteRule
                  - events:DescribeRule
                  - events:DisableRule
                  - events:EnableRule
                  - events:PutRule
                  - events:PutTargets
                  - events:RemoveTargets
                  - events:DescribeEventBus
                  - events:CreateEventBus
                  - events:DeleteEventBus
                  - events:TagResource
                  - events:UntagResource
                Resource:
                  - !Sub arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:rule/sdlf-*
                  - !Sub arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:event-bus/sdlf-*
              - Effect: Allow
                Action: iam:PassRole
                Resource: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sdlf-domain-*
                Condition:
                  StringEquals:
                    "iam:PassedToService":
                      - lambda.amazonaws.com
                      - lakeformation.amazonaws.com
                      - events.amazonaws.com
              - Effect: Allow
                Action: iam:PassRole
                Resource: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sdlf-cicd-domain # nested stacks
                Condition:
                  StringEquals:
                    "iam:PassedToService":
                      - cloudformation.amazonaws.com
              - Effect: Allow
                Action:
                  - iam:DeleteRole
                  - iam:DeleteRolePolicy
                  - iam:GetRole
                  - iam:GetRolePolicy
                  - iam:ListRolePolicies
                  - iam:AttachRolePolicy
                  - iam:PutRolePolicy
                  - iam:DetachRolePolicy
                  - iam:UntagRole
                  - iam:UpdateRole
                  - iam:UpdateRoleDescription
                  - iam:TagRole
                  - iam:UpdateAssumeRolePolicy
                  - iam:CreateRole
                Resource:
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sdlf-domain-*
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sdlf-*/sdlf-domain-*
              - Effect: Allow
                Action:
                  - iam:ListPolicies # W11 exception
                  - iam:ListRoles # W11 exception
                Resource: "*"
              - Effect: Allow
                Action:
                  - iam:CreatePolicy
                  - iam:CreatePolicyVersion
                  - iam:DeletePolicy
                  - iam:DeletePolicyVersion
                  - iam:GetPolicy
                  - iam:GetPolicyVersion
                  - iam:ListPolicyVersions
                Resource: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/sdlf/*/sdlf-domain-* # permissions boundary in sdlf-team
              - Effect: "Allow"
                Action: lambda:ListFunctions # W11 exception
                Resource: "*"
              - Effect: Allow
                Action:
                  - lambda:CreateFunction
                  - lambda:UpdateFunctionConfiguration
                Resource: !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:sdlf-*
                Condition: !If
                  - RunInVpc
                  - StringEquals:
                      "lambda:VpcIds":
                        - "{{resolve:ssm:/SDLF/VPC/VpcId}}"
                  - !Ref "AWS::NoValue"
              - Effect: Allow
                Action:
                  - lambda:AddPermission
                  - lambda:CreateAlias
                  - lambda:DeleteFunction
                  - lambda:DeleteFunctionConcurrency
                  - lambda:GetFunction
                  - lambda:GetFunctionConfiguration
                  - lambda:InvokeFunction
                  - lambda:ListTags
                  - lambda:PublishVersion
                  - lambda:PutFunctionConcurrency
                  - lambda:RemovePermission
                  - lambda:TagResource
                  - lambda:UntagResource
                  - lambda:UpdateAlias
                  - lambda:UpdateFunctionCode
                  - lambda:AddPermission
                  - lambda:RemovePermission
                Resource: !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:sdlf-*
              - Effect: Allow
                Action:
                  - lambda:GetEventSourceMapping # W11 exception
                Resource: "*"
              - Effect: Allow
                Action:
                  - lambda:CreateEventSourceMapping # can only be controlled through lambda:FunctionArn condition key
                  - lambda:DeleteEventSourceMapping # can only be controlled through lambda:FunctionArn condition key
                  - lambda:UpdateEventSourceMapping # can only be controlled through lambda:FunctionArn condition key
                Resource: "*"
                Condition:
                  ArnLike:
                    "lambda:FunctionArn": !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:sdlf-*
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:DeleteLogStream
                  - logs:DeleteLogGroup
                  - logs:DescribeLogStreams
                  - logs:PutLogEvents
                  - logs:PutRetentionPolicy
                  - logs:TagLogGroup
                Resource:
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/*/sdlf-*
              - Effect: Allow
                Action:
                  - logs:DescribeLogGroups # W11 exception
                Resource:
                  - "*"
              - Effect: Allow
                Action: sns:ListTopics # W11 exception
                Resource: "*"
              - Effect: Allow
                Action:
                  - sns:CreateTopic
                  - sns:DeleteTopic
                  - sns:GetTopicAttributes
                  - sns:Publish
                  - sns:SetTopicAttributes
                  - sns:Subscribe
                  - sns:Unsubscribe
                  - sns:TagResource
                Resource: !Sub arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:sdlf-*
              - Effect: Allow
                Action:
                  - s3:CreateBucket
                  - s3:GetBucketTagging
                  - s3:PutBucketTagging
                  - s3:GetEncryptionConfiguration
                  - s3:PutEncryptionConfiguration
                  - s3:GetBucketVersioning
                  - s3:PutBucketVersioning
                  - s3:GetLifecycleConfiguration
                  - s3:PutLifecycleConfiguration
                  - s3:GetBucketPublicAccessBlock
                  - s3:PutBucketPublicAccessBlock
                  - s3:GetBucketLogging
                  - s3:PutBucketLogging
                  - s3:PutBucketNotification
                  - s3:GetBucketNotification
                  - s3:DeleteBucket
                  - s3:GetBucketPolicy
                  - s3:PutBucketPolicy
                  - s3:DeleteBucketPolicy
                Resource: !If
                  - UseCustomBucketPrefix
                  - !Sub "arn:${AWS::Partition}:s3:::${pCustomBucketPrefix}*"
                  - !Sub "arn:${AWS::Partition}:s3:::*-${AWS::Region}-${AWS::AccountId}-*"
              - Effect: Allow
                Action:
                  - kms:DescribeKey
                  - kms:CreateKey
                  - kms:GetKeyPolicy
                  - kms:PutKeyPolicy
                  - kms:TagResource
                  - kms:UntagResource
                  - kms:CreateAlias
                  - kms:UpdateAlias
                  - kms:DeleteAlias
                  - kms:UpdateKeyDescription
                  - kms:EnableKeyRotation
                  - kms:Decrypt
                  - kms:Encrypt
                  - kms:GenerateDataKey*
                  - kms:ReEncrypt*
                  - kms:CreateGrant
                  - kms:RetireGrant
                  - kms:RevokeGrant
                  - kms:DisableKey
                  - kms:DisableKeyRotation
                  - kms:EnableKey
                  - kms:EnableKeyRotation
                  - kms:ScheduleKeyDeletion
                Resource: "*" # TODO meaningful way of restricting these permissions?
              - Effect: Allow
                Action:
                  - scheduler:GetScheduleGroup
                  - scheduler:CreateScheduleGroup
                  - scheduler:DeleteScheduleGroup
                  - scheduler:ListTagsForResource
                  - scheduler:UntagResource
                  - scheduler:TagResource
                  - scheduler:DeleteSchedule
                Resource:
                  - !Sub arn:${AWS::Partition}:scheduler:${AWS::Region}:${AWS::AccountId}:schedule-group/sdlf-*
                  - !Sub arn:${AWS::Partition}:scheduler:${AWS::Region}:${AWS::AccountId}:schedule/sdlf-*
              - Effect: Allow
                Action: sqs:ListQueues # W11 exception
                Resource: "*"
              - Effect: Allow
                Action:
                  - sqs:AddPermission
                  - sqs:CreateQueue
                  - sqs:ChangeMessageVisibility
                  - sqs:DeleteQueue
                  - sqs:GetQueueAttributes
                  - sqs:GetQueueUrl
                  - sqs:ListQueues
                  - sqs:ListQueueTags
                  - sqs:RemovePermission
                  - sqs:SendMessage
                  - sqs:SendMessageBatch
                  - sqs:SetQueueAttributes
                  - sqs:TagQueue
                  - sqs:UntagQueue
                Resource: !Sub arn:${AWS::Partition}:sqs:${AWS::Region}:${AWS::AccountId}:sdlf-*
              - Effect: Allow
                Action:
                  - ssm:AddTagsToResource
                  - ssm:DeleteParameter
                  - ssm:DeleteParameters
                  - ssm:DescribeParameters
                  - ssm:GetOpsSummary
                  - ssm:GetParameter
                  - ssm:GetParameterHistory
                  - ssm:GetParameters
                  - ssm:GetParametersByPath
                  - ssm:ListTagsForResource
                  - ssm:PutParameter
                  - ssm:RemoveTagsFromResource
                Resource: !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/*
              - Effect: Allow
                Action:
                  - lakeformation:DeregisterResource # W11 exception
                  - lakeformation:GetDataAccess # W11 exception
                  - lakeformation:GrantPermissions # W11 exception
                  - lakeformation:GetDataLakeSettings # W11 exception
                  - lakeformation:PutDataLakeSettings # W11 exception
                  - lakeformation:RegisterResource # W11 exception
                  - lakeformation:RevokePermissions # W11 exception
                  - lakeformation:UpdateResource # W11 exception
                  - lakeformation:CreateLFTag # W11 exception
                  - lakeformation:DeleteLFTag # W11 exception
                  - lakeformation:UpdateLFTag # W11 exception
                  - lakeformation:ListPermissions # W11 exception
                  - lakeformation:GetLFTag # W11 exception
                Resource: "*"
              - Effect: Allow
                Action:
                  - elasticmapreduce:CreateSecurityConfiguration # W11 exception
                  - elasticmapreduce:DeleteSecurityConfiguration # W11 exception
                  - elasticmapreduce:DescribeSecurityConfiguration # W11 exception
                  - elasticmapreduce:ListSecurityConfigurations # W11 exception
                Resource: "*"
              - Effect: Allow
                Action:
                  - glue:CreateSecurityConfiguration # W11 exception
                  - glue:DeleteSecurityConfiguration # W11 exception
                  - glue:GetSecurityConfiguration # W11 exception
                Resource: "*"
              - Effect: Allow
                Action:
                  - glue:PutDataCatalogEncryptionSettings
                Resource: !Sub arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:catalog
              - Effect: Allow
                Action:
                  - athena:GetWorkGroup
                  - athena:CreateWorkGroup
                  - athena:UpdateWorkGroup
                  - athena:DeleteWorkGroup
                  - athena:TagResource
                  - athena:UntagResource
                Resource: !Sub arn:${AWS::Partition}:athena:${AWS::Region}:${AWS::AccountId}:workgroup/sdlf-*
              - !If
                - RunInVpc
                - Effect: Allow
                  Action:
                    - ec2:DescribeSecurityGroups # W11 exception
                    - ec2:DescribeSubnets # W11 exception
                    - ec2:DescribeVpcs # W11 exception
                  Resource:
                    - "*"
                - !Ref "AWS::NoValue"

  rMonitoringDomainCloudFormationPolicy:
    Type: AWS::IAM::ManagedPolicy
    Condition: EnableMonitoring
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - cloudtrail:CreateTrail
              - cloudtrail:DeleteTrail
              - cloudtrail:AddTags
              - cloudtrail:RemoveTags
              - cloudtrail:StartLogging
              - cloudtrail:StopLogging
            Resource:
              - !Sub arn:${AWS::Partition}:cloudtrail:${AWS::Region}:${AWS::AccountId}:trail/sdlf-domain-*
          - Effect: Allow
            Action:
              - firehose:DescribeDeliveryStream
              - firehose:CreateDeliveryStream
              - firehose:DeleteDeliveryStream
              - firehose:TagDeliveryStream
              - firehose:UntagDeliveryStream
            Resource:
              - !Sub arn:${AWS::Partition}:firehose:${AWS::Region}:${AWS::AccountId}:deliverystream/sdlf-cwlogs-to-os
          - Effect: Allow
            Action:
              - iam:PassRole
            Resource:
              - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sdlf-domain-*
            Condition:
              StringEquals:
                "iam:PassedToService":
                  - cloudtrail.amazonaws.com
      Roles:
        - !Ref rDomainCloudFormationRole

  rTeamCloudFormationRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: KMS permissions are controlled through kms:ResourceAliases, the team's KMS infra key has not been created yet and its ARN is not known
          - id: W28
            reason: Resource uses an explicit name as it is used as principal in crossaccount S3 policies (devops kms & s3)
    Properties:
      RoleName: sdlf-cicd-team
      Description: Role assumed by a Lambda stage in CodePipeline to deploy the Team Role CloudFormation stack
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:Get*
                  - s3:ListBucket*
                  - s3:Put*
                Resource:
                  - !Sub arn:${AWS::Partition}:s3:::${pDevOpsArtifactsBucket}/*
              - Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:Describe*
                  - kms:Encrypt
                  - kms:GenerateDataKey*
                  - kms:List*
                  - kms:ReEncrypt*
                Resource: "*"
                Condition:
                  "ForAnyValue:StringLike":
                    "kms:ResourceAliases": !Ref pDevOpsKMSKey
        - PolicyName: sdlf-crossaccount-teamrole
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameter
                - ssm:GetParameters
                - ssm:GetParametersByPath
              Resource:
                - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/Misc/*
                - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/VPC/*
            - Effect: Allow
              Action:
                - iam:GetRole
                - iam:CreateRole
                - iam:UpdateRole
                - iam:DeleteRole
                - iam:UpdateRoleDescription
                - iam:GetRolePolicy
                - iam:PutRolePolicy
                - iam:DeleteRolePolicy
                - iam:AttachRolePolicy
                - iam:DetachRolePolicy
                - iam:TagRole
                - iam:UntagRole
              Resource:
                - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sdlf-cicd-team-*
            - Effect: Allow
              Action:
                - iam:CreatePolicy
                - iam:CreatePolicyVersion
                - iam:DeletePolicy
                - iam:DeletePolicyVersion
                - iam:GetPolicy
                - iam:GetPolicyVersion
                - iam:ListPolicyVersions
              Resource: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/sdlf-cicd-team-role-*
            - Effect: Allow
              Action:
                - iam:PassRole
              Resource:
                - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sdlf-team/sdlf-*
              Condition:
                StringEquals:
                  "iam:PassedToService":
                    - cloudformation.amazonaws.com

Outputs:
  # workaround {{resolve:ssm:}} not returning an array that can be used directly in VpcConfig blocks
  oVpcFeatureSecurityGroupIds:
    Description: List of security group ids that will be attached to Lambda functions and CodeBuild projects
    Value: !If
      - RunInVpc
      - "{{resolve:ssm:/SDLF/VPC/SecurityGroupIds}}"
      - "-"
    Export:
      Name: !Join ["-", [!Ref "AWS::StackName", "vpc-security-groups"]]

  oVpcFeatureSubnetIds:
    Description: List of subnet ids that will be attached to Lambda functions and CodeBuild projects
    Value: !If
      - RunInVpc
      - "{{resolve:ssm:/SDLF/VPC/SubnetIds}}"
      - "-"
    Export:
      Name: !Join ["-", [!Ref "AWS::StackName", "vpc-subnets"]]
